
nnoremap <F4> :execute "G " . expand("<cword>") <CR>
command -nargs=? G call GitGrep(<f-args>)

func GitGrep(...)
  let save = &grepprg
  set grepprg=git\ grep\ -n\ $*
  let s = 'grep'
  for i in a:000
    let s = s . ' ' . i
  endfor
  exe s
  let &grepprg = save
endfun

" ** adds all the dir recursively. This will ensure that vim finds the file when we do a gf command.
set path=.,/usr/include,,**

"Opening gf in a new tab always
nnoremap gf <C-W>gF

"Trying to fix ctrlp
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*/\.git/*
set wildmode=list:longest
set wildmenu                "enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~ "stuff to ignore when tab completing
set wildignore+=*.gem
set wildignore+=log/**
set wildignore+=tmp/**
set wildignore+=*.png,*.jpg,*.gif
"let g:ctrlp_match_func = { 'match': 'pymatcher#PyMatch' }

let g:ctrlp_custom_ignore = '|git|out|third_party|linux|windows|android_tools|'

let g:ackprg = 'ag --nogroup --nocolor --column'

let g:deoplete#enable_at_startup = 1

" initialize g:grepper with defaults
runtime plugin/grepper.vim

let g:grepper.tools += ['git']
let g:grepper.git = {
    \ 'grepprg':    'git grep -nIi',
    \ 'grepformat': '%f:%l:%m',
    \ 'escape':     '\^$.*[]',
    \ }

" Removing trailing whitespaces in a file.
:%s/\s\+$//e

" ToggleTagBar plugin
nmap <F8> :TagbarToggle<CR>
ca tt TagbarToggle

" Tabnew
ca tn tabnew

ca gg GrepperGit

set cc=80

set t_Co=256
colorscheme gruvbox
let g:airline_theme='gruvbox'
